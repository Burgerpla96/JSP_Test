[데이타베이스 모델링 개념]



가) 데이터베이스 모델링의 정의
   
   현실 세계의 업무적인 프로세스를 물리적으로 데이터베이스화 하기 위한 과정으로
   실체(Entity)(객체)와 관계(Relationship)를 중심으로 체계적으로 표현하고 문서화하는 기법이며 정보시스템의
   중심을 데이터의 관점에서 접근하는 데이터 중심의 분석 방법.
   
   Entity와 Relationship은 table로 만들고, 속성은 col로 만든다.
   

나) 데이터베이스 모델링의 목적

   정보시스템을 구축하는데 필요한 정보(데이터)를 약속된 표기법에 의해 표현함으로써
   시스템 구축 대상이 되는 업무 내용을 정확하게 분석하고자 함.
   또한 분석된 모델을 가지고 실제 데이터베이스를 생성하여 개발 및 관리에 이용하고자 함.

다) 데이터베이스 모델링 절차

  1)개념적 데이터베이스 모델링--실체와 관계를 뽑아냄
     어떤 정보가 필요하며 어떤 데이터를 DB에 담아야 하는지 등을 나타내기 위해
     실세계의 정보 구조의 모형을 변환하여 일반화 시키는 단계
     (업무적인 관점에서 접근하고 분석하는 단계) 
     산출물은 E-R Diagram-->(ERD_Entity Relationship Diagram)

  2)논리적 데이터 베이스 모델링
     개념적 설계에서 추출된 실체와 속성들의 관계를 구조적으로 설계하는 단계로써
     정확한 업무분석을 통한 자료의 흐름을 분석하여 실체와 속성들의 관계를 구조적으로(PK설정 등..) 
     설계한다(스키마(schema)를 설계하는 단계)

     Mapping Rule 및 정규화 과정 필요!!!!!!!!!
     -제 1 정규화, 제 2 정규화

  3)물리적 데이터 베이스 모델링 
     논리적 데이터모델링에서 정의된 정규화된 모델을 개발 DBMS의 특성 및 효율적인 
  DBMS가 되기위한 데이터 분산등을 고려해 데이터베이스 스키마를 구축하는 단계 
	
    개발 DBMS의 선정,컬럼의 데이터 타입과 사이즈 정의,데이터 사용량 분석,인덱스 설정
    각종 데이터베이스 개체저의 및 데이터베이스 생성등






[1] 개념적 데이터베이스 모델링

(1)실체(ENTITY)

실체의 정의
업무 수행을 위하여 기업이 알아야 될 대상이 되는 사람,장소,사물,사건 및 개념
(데이터로 관리되어져야 하는 항목)
각 실체는 유일하게 식별 가능해야하며 인스턴스(record)라 불리는 개별적인 객체!들의 집합으로
반드시 주식별자(PK)가 존재해야 함.

실체의 특징
-업무에서 필요하고 관리하고자하는 정보여야 한다(예:환자->병원에서만 해당)
-2개이상의 인스턴스가 존재해야 의미가 있다.(예:과목:수학만 가르치는 보습학원?)
-반드시 하나 이상의 속성을 가져야 한다(예:과목-과목코드,과목명,학점..)

실체파악 요령
- 관련분야에 대한 지식
- 서류자료 이용
- 담당자와의 인터뷰를 통한 파악
- 업무 분석 결과를 토대로 명사위주로 파악
- 실체명은 현업용어(업무사용용어),단순명사,유일한 명칭을 사용하는 것이 좋음


(2)속성

속성의 정의
실체의 성질,분류,식별,상태등을 나타내는 세부항목이며 정보의 요소로써 관리되는 항목이다.
실체에 포함되는 속성의 숫자는 10개 항목 내외로 구성하는 것이 바람직하다.
속성은 식별자와 비식별자로 구분한다.
핵심단어로 정의하거나 명명규칙을 정의하는 것이 좋다

속성의 유형
기초속성:원래 갖고 있는 속성 즉 현업에서 기본적으로 사용되는 속성
?	이름,나이,직위,주소,전화번호
추출속성: 기존 속성으로부터의 가공처리를 통해 생성 및 유지되는 속성
?	금액 
설계속성:실제로는 존재하지 않으나 시스템의 효율성을 도모하기 위해 설계자가
         임의로 부여하는 속성.  
?	부서코드

속성 도메인 설정
속성이 가질 수 있는 값들의 범위,속성에 대한 세부적인 업무 제약조건 및 
특성을 전체적으로 정의해 주는 부분, 도메인 추출은 추후 개발 및 실체를 
데이터베이스로 생성할때나 프로그램 구현시 유용하게 사용하는 산출물임.
도메인 정의 항목: 데이터 타입(숫자,문자,날짜),데이터 크기,Unique,Null여부 ,초기값등

(3)식별자(Idnetifier)

식별자 정의
한 실체내의 특정 인스턴스를 구분할 수 있는 단일 속성 또는 속성 그룹(여러 col의 묶음)을 말함.
모든 실체는 반드시 하나 이상의 식별자를 보유하여야 한다.

식별자의 종류
1) 후보 식별자(Candidate Identifier): 실체의 각 인스턴스를 유일하게 식별하기 위하여 제공되는 속성이나 속성의 그룹
2) 주 식별자(primary Identifier): 실체의 각 인스턴스를 유일하게 식별하는데 가장 적합한 식별자로
 후보 식별자에서 선택한 속성이나 속성의 그룹을 주 식별자로 정의 할 수 있다.
-주 식별자 선별요령: 실체를 대표할 수 있 것,업무적인 활용도가 높을 것,길이가 짧을 것
-주 식별자는 기본적으로 Not Null과 NOT Duplicate속성을 갖는다.
3) 부 식별자(Alternate Identifier): 후보 식별자중 주 식별자로 선정 되지 않은 식별자 
              예) 회원테이블의 주민번호
4) 외부 식별자(Foreign Identifier): 두 실체간의 관계형성을 통해 부모 실체의 주 식별자가 자식 실체에 전이된 식별자  
5) 대리 식별자(Surrogate Identifier): 마땅한 주 식별자가 없는 경우, 이를 위해 사용되는 인위적으로 정의한 칼럼.(일련번호)

(4)관계(Relational)

   관계의 정의
   두 개의 실체간에 명명되어진 의미잇는 연결이며 두 실체간의 업무적인 연관성을 나타냄.
   차수성(cardinolity)의 정의
   관계를 맺고 있는 두 테이블간에 레코드가 매칭되는 유형을 정의 한 것으로 1:1(일대일),
   1:N(일대다),N:N(다대다)관계가 있다.

   1:1(일대일): A테이블에 있는 한 레코드는 B테이블에 있는 한 레코드와 일치하는 관계.(10%)
   1:N(일대다): A테이블에 있는 각각의 레코드는 B테이블에 있는 하나 이상의 레코드와 일치하나
              B 테이블에 있는 레코드는 A테이블에 있는 레코드와 단지 하나 만이 일치하는 관계.(90%)
   N:N(다대다): A테이블에 있는 각각의 레코드는 B테이블에 있는 하나 이상의 레코드와
   			    일치하고 B 테이블에 있는 레코드도 A테이블에 있는 하나 이상의 레코드와 
			    일치하는 관계
   			  -RDBMS에서는 N:N을 1:1, 1:N으로 나눠야만 한다.(아니면 좋은 기능을 사용 불가)  

(추가)선택성의 정의
두 실체간에 관계가 설정 되엇을 때, 항상 두 실체의 모든 인스턴스간에 관계가 존재해야 하는지
아니면 모든 인스턴스에 대해 존재할 필요가 없는지를 나타내는 부분이다.







[2] 논리적 데이터 베이스 모델링

(1)Mapping Rule?
	개념적 데이터베이스 모델링에서 얻어진 E-R Diagram을 관계형 데이터 베이스 이론에
         입각해서 데이터베이스 스키마로 변환하는 과정
	
	예) 엔터티 -> 테이블 ,속성 -> 컬럼,식별자 -> 기본키

(2)정규화
       정규화를 하는 이유는 데이터의 중복을 방지하고 보다 효율적으로 데이터를 저장하기
       위함이며 속성들을 본래의 테이블에 정확히 위치시키고자 함이다. -- 정규화는 순서가 없다.

      가) 제 1 정규화
	반복되는 속성이나 그룹 속성을 제거하고 새로운 실체를 추가한 뒤 기존의 실체와 1:N의 관계를 형성한다.(예: 회원의 자격증 정보/과정과 교재관계)
	ex) 수강생(실체) -- 취득(관계) -- 자격증(실체)
		수강생과 자격증은 N:N이지만 취득이라는 관계 table을 만들어(제 1 정규화) 분리해 1:N의 관계 형성.
		수강생의 PK는 아이디, 자격증의 PK는 자격증 코드, 취득은 두 PK를 FK로 받아 두 개의 FK그룹으로 묶어 식별자(복합키)로 사용.
	
      나) 제 2 정규화
	  복합키(Composite Primary Key)로 구성된 경우 해당 테이블 안의 모든 칼럼들은 
	복합키 전체에 의존적이어야 한다.!!! 만일 복합키 일부에 의존적인 칼럼이 존재한다면
	제거해야 한다.!!!
	  복합키가 아닌 경우 제 2 정규화의 대상이 안된다.
	 (예: 학생 과 동아리 관계-동아리 등록(등록시 작성필드))
	 (추가) 역정규화!!
	  정규화에는 위배가 되지만 검색 속도를 위해서 col을 추가한 것을 역정규화라고 한다. 
	 ex) 취득 테이블에서 id에만 의존적인 이름 column 사용
	
	 ex) 위의 수강생과 자격증은 제 2 정규화를 할 필요가 없다.
		 취득 table에서 취득일은 제 2 정규화가 되어 있어 취득도 제 2 정규화를 할 필요가 없다. 
	
     다) 제 3 정규화
	한 테이블안의 키가 아닌 모든 칼럼들은 기본키에 의존해야 한다. 만일 키가 아닌 칼럼에
	종속되는 속성이 존재한다면 이를 제거해야 한다.
	(예: 회원의 우편번호 및 주소 관계-주소필드 세분화)








[3]물리적 데이터 베이스 모델링

 논리 데이터베이스 구조로부터 효율적이고 구현가능한 물리적 구조의 데이터베이스 구조를
설계하는 것

가) 개발 dbms선정
나) 컬럼의 데이터 타입과 사이즈 정의
다) 데이터 사용량 분석과 사용자들의 업무 프로세스 분석
라) 역정규화
   (1)컬럼역정규화(데이타 중복)- 학생 과 동아리 관계-동아리 등록(학생이름,동아리명)
       - 되도록이면 짧은 사이즈의 컬럼으로 
   (2) 파생컬럼의 생성 ? 판매 테이블의 판매금액(판매단가 * 판매수량)
       - 판매금액을 컬럼으로 생성하려 입력시 판매 금액 입력(조회시 연산을 수행 안함)
   (3)테이블 분리 ? 컬럼을 기준으로 분리(사원과부가정보(혈액형/키/몸무게/취미/종교/결혼유무))
		레코드를 기준으로 분리(성적테이블 ? 상/중/하)
   (4)테이블 통합
      
마) 제약조건 정의
바) INDEX,VIEW,Stored Procedure,Trigger등 각종 Object정의
사) 데이터베이스 생성 




[4]데이터 모델링 실습
현업상황)
1) 
어떤 자동차 판매 사원이 고객관리를 하고자 한다.
그 판매사원이 관리하고 싶은 정보는 고객정보와 판매된 자동차에 대한 정보로
어느 고객이 어느 자동차를 매입 하였고 어떤 자동차들이 어느 고객에게 판매가 되었는지를
관리 하고자 한다.
2) 또한 자동차 판매 사원은 고객에 대한 개인 정보로 이름,주민번호,연락처,주소,그리고 직장명,직함을 데이타로 유지하고자 하고 자동차에 대해서는 차종,차명,연식을 기본 데이터로 관리하고자 한다.
3) 마지막으로 판매한 차량에 대해 고객이 페차를 했을 때 페차 정보를 유지하여 페차를 한 고객에 대해 지속적인 관리를 하고자 한다. 





