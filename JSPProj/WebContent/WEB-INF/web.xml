<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>JSPProj</display-name>

	<!-- 서블릿 등록 -->
	<servlet>
		<servlet-name>SERVELT_HELLO</servlet-name>
		<servlet-class>controller.HelloServlet</servlet-class>
	</servlet>
	<!-- 요청 URL 맵핑 -->
	<servlet-mapping>
		<servlet-name>SERVELT_HELLO</servlet-name>
		<url-pattern>/HelloServlet.do</url-pattern>
	</servlet-mapping>



	<!-- 서블릿 등록 -->
	<servlet>
		<servlet-name>CALCURATOR</servlet-name>
		<servlet-class>controller.CalcuratorServlet</servlet-class>
	</servlet>
	<!-- 요청 URL 맵핑 -->
	<servlet-mapping>
		<servlet-name>CALCURATOR</servlet-name>
		<url-pattern>/Calcurator.kosmo</url-pattern>
	</servlet-mapping>



	<!-- 서블릿 등록 -->
	<servlet>
		<servlet-name>CONTENT_TYPE</servlet-name>
		<servlet-class>controller.ContentTypeServlet</servlet-class>
	</servlet>
	<!-- 요청 URL 맵핑 -->
	<servlet-mapping>
		<servlet-name>CONTENT_TYPE</servlet-name>
		<url-pattern>/AniDir/SomeDir/SetContentType.kosmo</url-pattern>
	</servlet-mapping>

	
	
	<!--  컨텍스트 초기화 파라미터 등록 -->
	<context-param>
		<param-name>ORACLE_URL</param-name>
		<param-value>jdbc:oracle:thin:@localhost:1521:orcl</param-value>
	</context-param>

	<context-param>
		<param-name>ORACLE_DRIVER</param-name>
		<param-value>oracle.jdbc.OracleDriver</param-value>
	</context-param>

	<!-- 패이징 관련 컨텍스트 초기화 파라미터 -->
	<context-param>
		<param-name>PAGE_SIZE</param-name>
		<param-value>10</param-value>
	</context-param>
	<context-param>
		<param-name>BLOCK_PAGE</param-name>
		<param-value>3</param-value>
	</context-param>
	
	
	<!-- connection pool위한 작업 -->
	<context-param>
		<param-name>JNDI_ROOT</param-name>
		<param-value>java:comp/env</param-value>
	</context-param>



	<!-- 해당  JSP페이지에서만 사용가능한 서블리 초기화 파라미터 등록
		효용도가 떨어진다.
	-->
	<servlet>
		<servlet-name>APPLICATION_1_JSP</servlet-name>
		<jsp-file>/InnerObject03/Application_1.jsp</jsp-file>
		<init-param>
			<param-name>SERVLET_INIT</param-name>
			<param-value>서블릿 초기화 파라미터입니다.</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>APPLICATION_1_JSP</servlet-name>
		<url-pattern>/InnerObject03/Application_1.jsp</url-pattern>
	</servlet-mapping>




	<!-- Session유효시간 설정 (분단위) -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>


	<!-- 나만의 태그 라이브러리를 사용하기 위한 설정 -->
	<jsp-config>
		<taglib>
			<taglib-uri>/WEB-INF/tlds/mytag.tld</taglib-uri>
			<taglib-location>/WEB-INF/tlds/mytag.tld</taglib-location>
		</taglib>
	</jsp-config>
	
	
	
	
	<!-- servlet 연습하기 -->
	<servlet><!-- get -->
		<servlet-name>GET_SERVLET</servlet-name>
		<servlet-class>controller.servlet.GetController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>GET_SERVLET</servlet-name>
		<url-pattern>/Basic/get.kosmo</url-pattern>
	</servlet-mapping>
	
	<servlet><!-- post -->
		<servlet-name>POST_SERVLET</servlet-name>
		<servlet-class>controller.servlet.PostController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>POST_SERVLET</servlet-name>
		<url-pattern>/Basic/post.kosmo</url-pattern>
	</servlet-mapping>
	
	<servlet><!-- both -->
		<servlet-name>BOTH_SERVLET</servlet-name>
		<servlet-class>controller.servlet.BothController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BOTH_SERVLET</servlet-name>
		<url-pattern>/Basic/both.kosmo</url-pattern>
	</servlet-mapping>
	
	<servlet><!-- multi -->
		<servlet-name>MULTI_SERVLET</servlet-name>
		<servlet-class>controller.servlet.MultiController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MULTI_SERVLET</servlet-name>
		<url-pattern>/Basic/multi.kosmo</url-pattern>
	</servlet-mapping>
	
	<servlet><!-- first -->
		<servlet-name>FIRST_SERVLET</servlet-name>
		<servlet-class>controller.servlet.FirstController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FIRST_SERVLET</servlet-name>
		<url-pattern>/Basic/first.kosmo</url-pattern>
	</servlet-mapping>
	
	<servlet><!-- second -->
		<servlet-name>SECOND_SERVLET</servlet-name>
		<servlet-class>controller.servlet.SecondController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SECOND_SERVLET</servlet-name>
		<url-pattern>/Basic/second.kosmo</url-pattern>
	</servlet-mapping>
	
	
	<!-- servlet 개인 연습 -->
	<servlet>
		<servlet-name>Test_post</servlet-name>
		<servlet-class>test.Test_post</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Test_post</servlet-name>
		<url-pattern>/Test/Test_post.jsp</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>Test_get</servlet-name>
		<servlet-class>test.Test_get</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Test_get</servlet-name>
		<url-pattern>/Test/Test_get.jsp</url-pattern>
	</servlet-mapping>
	
	
	
	
	
	<!-- DataRoom을 위한 servlet등록 -->
	<!-- 사용자 요청을 처리할 서블릿 등록: 메인 페이지로 이동 요청용 -->
	<servlet>
		<!-- 서블릿명: 임의로 지정 -->
		<servlet-name>DataRoomIndex</servlet-name>
		<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
		<servlet-class>controller.dataroom.IndexController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomIndex</servlet-name>
		<!-- 반드시 /로 시작하는 패턴: 디렉토리 구조와 무관함 -->
		<url-pattern>/DataRoom/Index.kosmo</url-pattern>
	</servlet-mapping>
	
	<!-- 목록 처리용 -->
	<servlet>
		<servlet-name>DataRoomList</servlet-name>
		<servlet-class>controller.dataroom.ListController</servlet-class>
		
		<!--  servlet초기화용 -->
		<init-param>
			<param-name>PAGE_SIZE</param-name>
			<param-value>2</param-value>
		</init-param>
		<init-param>
			<param-name>BLOCK_PAGE</param-name>
			<param-value>2</param-value>
		</init-param>
		
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomList</servlet-name>
		<url-pattern>/DataRoom/List.kosmo</url-pattern>
	</servlet-mapping>
	
	<!-- 하나의 컨트롤러로 입력 폼으로 이동 요청 및 입력처리 요청을 처리 -->
	<servlet>
		<servlet-name>DataRoomWrite</servlet-name>
		<servlet-class>controller.dataroom.WriteController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomWrite</servlet-name>
		<url-pattern>/DataRoom/Write.kosmo</url-pattern>
	</servlet-mapping>
	
	<!-- 상세보기용 -->
	<servlet>
		<servlet-name>DataRoomView</servlet-name>
		<servlet-class>controller.dataroom.ViewController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomView</servlet-name>
		<url-pattern>/DataRoom/View.kosmo</url-pattern>
	</servlet-mapping>
	
	<!-- password check용 -->
	<servlet>
		<servlet-name>DataRoomPassword</servlet-name>
		<servlet-class>controller.dataroom.PasswordController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomPassword</servlet-name>
		<url-pattern>/DataRoom/Password.kosmo</url-pattern>
	</servlet-mapping>
	
	<!-- 수정폼으로 이동 및 수정처리 요청용(이전 것 뿌려주기) -->
	<servlet>
		<servlet-name>DataRoomEdit</servlet-name>
		<servlet-class>controller.dataroom.EditController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomEdit</servlet-name>
		<url-pattern>/DataRoom/Edit.kosmo</url-pattern>
	</servlet-mapping>
	
	
	<!-- 다운로드 설정 -->
	<servlet>
		<servlet-name>DataRoomDownload</servlet-name>
		<servlet-class>controller.dataroom.DownloadController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomDownload</servlet-name>
		<url-pattern>/DataRoom/Download.kosmo</url-pattern>
	</servlet-mapping>
	
	
	
	
	<!-- 
	설정을 통한 에러처리
	방법1. 에러코드로
	-->
	<!--  
	<error-page>
		<error-code>500</error-code>
		<location>/Error15/ErrorCode.jsp</location>
	</error-page>
	-->
	<!-- 방법2. 예외 클래스로 -->
	<!-- 
	<error-page>
		<exception-type>java.lang.NullPointerException</exception-type>
		<location>/Error15/ErrorType.jsp</location>
	</error-page>
		-->
	
	
	
	
	
	
	
	
	
	
	



	<!-- 시작 문서 설정  -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>HelloWorld.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>